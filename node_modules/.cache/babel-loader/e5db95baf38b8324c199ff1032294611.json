{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { rootReducer } from '../reducers/rootReducer';\nimport { middleware } from '../middleware/middleware';\nimport thunk from 'redux-thunk';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport { GetTokenPersitant } from '../common/utilities/utilities';\nconst history = createBrowserHistory();\n/**\n * Get token saved\n */\n\nlet tokenPersitance = GetTokenPersitant() || {\n  accesstoken: '',\n  isAuthenticated: false\n};\nconst initState = {\n  account: tokenPersitance,\n  home: {\n    count: 0,\n    dataTables: []\n  },\n  ui: {\n    loading: false\n  }\n};\n/**\n * configure redux devtools\n */\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n/**\n * Export store\n */\n\nexport const store = createStore(rootReducer(history), initState, composeEnhancers(applyMiddleware(routerMiddleware(history), middleware, thunk)));","map":{"version":3,"sources":["/home/kai/react/blog-person/src/store/store.js"],"names":["createStore","applyMiddleware","compose","rootReducer","middleware","thunk","connectRouter","routerMiddleware","createBrowserHistory","GetTokenPersitant","history","tokenPersitance","accesstoken","isAuthenticated","initState","account","home","count","dataTables","ui","loading","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,wBAAhD;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,MAAMC,OAAO,GAAGF,oBAAoB,EAApC;AAEA;;;;AAGA,IAAIG,eAAe,GAAGF,iBAAiB,MAAM;AACzCG,EAAAA,WAAW,EAAE,EAD4B;AAEzCC,EAAAA,eAAe,EAAE;AAFwB,CAA7C;AAKA,MAAMC,SAAS,GAAG;AACVC,EAAAA,OAAO,EAAEJ,eADC;AAEVK,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,CADL;AAEFC,IAAAA,UAAU,EAAE;AAFV,GAFI;AAMVC,EAAAA,EAAE,EAAE;AACAC,IAAAA,OAAO,EAAE;AADT;AANM,CAAlB;AAUI;;;;AAGJ,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CrB,OAAxE;AACA;;;;AAGA,OAAO,MAAMsB,KAAK,GAAGxB,WAAW,CAC5BG,WAAW,CAACO,OAAD,CADiB,EAE5BI,SAF4B,EAG5BO,gBAAgB,CACZpB,eAAe,CACXM,gBAAgB,CAACG,OAAD,CADL,EAEXN,UAFW,EAGXC,KAHW,CADH,CAHY,CAAzB","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux'\nimport { rootReducer } from '../reducers/rootReducer'\nimport { middleware } from '../middleware/middleware'\nimport thunk from 'redux-thunk'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport { createBrowserHistory } from 'history'\nimport { GetTokenPersitant } from '../common/utilities/utilities';\n\nconst history = createBrowserHistory();\n\n/**\n * Get token saved\n */\nlet tokenPersitance = GetTokenPersitant() || {\n    accesstoken: '',\n    isAuthenticated: false\n};\n\nconst initState = {\n        account: tokenPersitance,\n        home: {\n            count: 0,\n            dataTables: []\n        },\n        ui: {\n            loading: false\n        }\n    }\n    /**\n     * configure redux devtools\n     */\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n/**\n * Export store\n */\nexport const store = createStore(\n    rootReducer(history),\n    initState,\n    composeEnhancers(\n        applyMiddleware(\n            routerMiddleware(history),\n            middleware,\n            thunk\n        )\n    )\n);"]},"metadata":{},"sourceType":"module"}